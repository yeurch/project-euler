# Pentagon numbers
# Problem 44

# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first
# ten pentagonal numbers are:
#
#    1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
#
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
# 70 − 22 = 48, is not pentagonal.
#
# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
# difference are pentagonal and D = |Pk − Pj| is minimised; what is the value
# of D?

import time

start = time.time()

def series(base):
    step_delta = base - 2
    step = 1
    n = 1
    yield n
    while True:
        step += step_delta
        n += step
        yield n

def is_pentagonal(x):
    if x < 1: return False
    n = round((1+(1+24*x)**0.5)/6)
    return n * (3*n - 1) == 2*x

pentagonals = list([n*(3*n-1)//2 for n in range(1,5001)])

result = 0

for j in range(len(pentagonals)):
    pj = pentagonals[j]
    for k in range(j+1,len(pentagonals)):
        pk = pentagonals[k]
        gap = pk - pj
        if is_pentagonal(pj + pk) and is_pentagonal(gap) and (result == 0 or gap < result):
            result = gap
            print('j={}, k={}, gap={}'.format(pj, pk, gap))
        if result > 0 and gap >= result:
            break

print('Result is {}'.format(result))

end = time.time()
print ('Time taken: {:.6f}s'.format(end - start))
